version: "3.12"

services:
  db:
    image: postgres:16
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    expose:
      - "5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  app:
    build:
      context: .
    tty: true
    command: sh -c 'python manage.py migrate && python manage.py runserver 0.0.0.0:8000'
    volumes:
      - .:/app
    restart: on-failure
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - '6379'

  celery-worker:
    build: .
    tty: true
    restart: on-failure
    env_file:
      - .env
    command: celery -A config worker -l INFO
    depends_on:
      - redis
      - app
      - db

  celery-beat:
    build: .
    tty: true
    volumes:
      - .:/app
    env_file:
      - .env
    restart: on-failure
    depends_on:
      - redis
      - app
      - db
    command: celery -A config beat -l info -S django
volumes:
  pg_data: