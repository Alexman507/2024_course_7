version: "3.12"

services:
  db:
    image: postgres:16
    env_file:
      - .env
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "db_name"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - ./pddata:/var/lib/postgresql/data

  api:
    build:
      context: .
    tty: false
    volumes:
      - .:/code
    restart: on-failure
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
  redis:
    image: redislabs/redismod
    ports:
      - '6379:6379'

  celery-worker:
    build: .
    container_name: celery-worker
    restart: always
    env_file:
      - .env
    command: celery -A config worker -l INFO
    depends_on:
      - redis

  celery-beat:
    build: .
    container_name: celery-beat
    env_file:
      - .env
    depends_on:
      - redis
    command: celery -A config beat -l info -S django
volumes:
  api:
  db:
    driver: local
  redis:
    driver: local
  celery-worker:
    driver: local
  celery-beat:
    driver: local