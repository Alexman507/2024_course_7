version: "3.12"

services:
  django:
    # Сборка образа для сервиса django из текущей директории
    build: .
    # Задание имени контейнера для сервиса django
    container_name: django
    # Задание команды, которую нужно запустить при запуске контейнера для сервиса django
    command: sh -c 'python manage.py migrate && python manage.py runserver 0.0.0.0:8000'
    volumes:
      - .:/usr/src/app
    # Открытие порта на хостовой машине и перенаправление на порт в контейнере
    ports:
      - 8000:8000
    # Зависимость от другого сервиса
    depends_on:
      - pgdb

  pgdb:
    # Использование готового образа postgres
    image: postgres
    # Задание переменных окружения для контейнера с postgres
    environment:
      - POSTGRES_DB=drf
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
     # Задание имени контейнера для сервиса pgdb
    container_name: pgdb
     # Связывание тома с директорией в контейнере для сохранения данных postgres
    volumes:
      - pgdbdata:/var/lib/postgresql/data/

  redis:
    image: redis:latest
    restart: no
    expose:
      - '6379'


  celery-worker:
    build: .
    tty: true
    restart: no
    environment:
      DEBUG: "True"
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
    command: celery -A config worker -l INFO
    depends_on:
      - redis
      - django
      - pgdb

  celery-beat:
    build: .
    environment:
      - CELERY_BROKER_URL=redis://redis:6379
    tty: true
    restart: no
    links:
      - pgdb
      - redis
    depends_on:
      - redis
      - django
      - pgdb
    command: [ "sh", "-c", "celery -A config beat -l INFO && celery -A config -l info -P gevent" ]
volumes:
  pgdbdata: null